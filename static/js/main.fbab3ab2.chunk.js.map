{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","className","type","value","placeholder","onChange","handleInputChange","Result","weather","err","date","sunrise","sunset","temp","pressure","wind","city","country","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","App","state","countery","e","setState","target","prevProps","prevState","this","length","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","main","speed","toUpperCase","catch","console","log","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAUeA,EARF,SAACC,GACX,OACG,yBAAKC,UAAU,QACZ,2BAAOC,KAAK,OAAOC,MAAOH,EAAMG,MAAOC,YAAY,eAAeC,SAAUL,EAAMM,sBCwC5EC,EA3CA,SAACP,GAAW,IAAD,EAYnBA,EAAMQ,QATPC,EAHoB,EAGpBA,IACAC,EAJoB,EAIpBA,KACAC,EALoB,EAKpBA,QACAC,EANoB,EAMpBA,OACAC,EAPoB,EAOpBA,KACAC,EARoB,EAQpBA,SACAC,EAToB,EASpBA,KACAC,EAVoB,EAUpBA,KACAC,EAXoB,EAWpBA,QAGCC,EAAU,KAEd,IAAKT,GAAOO,EAAM,CAEf,IAAMG,EAAc,IAAIC,KAAe,IAAVT,GAAgBU,qBACvCC,EAAa,IAAIF,KAAc,IAATR,GAAeS,qBAE3CH,EACG,yBAAKjB,UAAU,UACZ,iDAAsB,gCAASe,GAA/B,KAAgDC,EAAhD,KACA,qDAAsBP,GACtB,qDAA2BG,EAA3B,UACA,sCAAYE,EAAZ,QACA,0CAAgBD,EAAhB,QACA,qEAA8BK,GAC9B,qEAA8BG,IAOvC,OACG,oCACIb,EAAM,GAAKS,IC+CNK,G,kNA5EbC,MAAQ,CACNrB,MAAO,GACPO,KAAM,GACNM,KAAM,GACNS,SAAU,GACVd,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNN,KAAK,G,EAIPH,kBAAoB,SAACoB,GACnB,EAAKC,SAAS,CACZxB,MAAOuB,EAAEE,OAAOzB,S,iEAID0B,EAAWC,GAAY,IAAD,OAEvC,GAAgC,IAA5BC,KAAKP,MAAMrB,MAAM6B,QAEjBF,EAAU3B,QAAU4B,KAAKP,MAAMrB,MAAO,CAExC,IAAM8B,EAAG,4DAAwDF,KAAKP,MAAMrB,MAAnE,kBA/BA,mCA+BA,iBAET+B,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,GAAD,OAAI,EAAKd,MAAMrB,MAAf,qBAEZgC,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GAEJ,IAAMC,GAAO,IAAIrB,MAAOsB,iBACxB,EAAKf,SAAS,CACZlB,KAAK,EACLC,KAAM+B,EACN9B,QAAS6B,EAAKG,IAAIhC,QAClBC,OAAQ4B,EAAKG,IAAI/B,OACjBC,KAAM2B,EAAKI,KAAK/B,KAChBC,SAAU0B,EAAKI,KAAK9B,SACpBC,KAAMyB,EAAKzB,KAAK8B,MAChB7B,KAAM,EAAKQ,MAAMrB,MAAM2C,cACvB7B,QAASuB,EAAKG,IAAI1B,aAGrB8B,OAAM,SAAAtC,GACLuC,QAAQC,IAAIxC,GACZ,EAAKkB,SAAS,CACZlB,KAAK,U,+BASb,OACE,yBAAKR,UAAU,cACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEE,MAAO4B,KAAKP,MAAMrB,MAClBG,kBAAmByB,KAAKzB,oBAC1B,kBAAC,EAAD,CAAQE,QAASuB,KAAKP,c,GAvEd0B,c,MCJlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fbab3ab2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\n   return (\r\n      <div className=\"form\">\r\n         <input type=\"text\" value={props.value} placeholder=\"Wpisz miasto\" onChange={props.handleInputChange} />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n\r\n   const {\r\n      err,\r\n      date,\r\n      sunrise,\r\n      sunset,\r\n      temp,\r\n      pressure,\r\n      wind,\r\n      city,\r\n      country,\r\n   } = props.weather\r\n\r\n   let content = null\r\n\r\n   if (!err && city) {\r\n      // Wrong format in API so need to multiplication \r\n      const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\r\n      const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\r\n\r\n      content = (\r\n         <div className=\"result\">\r\n            <h5>Pogoda dla miasta <strong>{city}</strong> ({country})</h5>\r\n            <p>dzień i godzina : {date}</p>\r\n            <p>temperatura aktualna : {temp} °C</p>\r\n            <p>wiatr : {wind} m/s</p>\r\n            <p>cisnienie : {pressure} hPa</p>\r\n            <p>Wschód słońca dzisiaj o : {sunriseTime}</p>\r\n            <p>Zachód słońca dzisiaj o : {sunsetTime}</p>\r\n         </div>\r\n\r\n\r\n      )\r\n   }\r\n\r\n   return (\r\n      <>\r\n         {err ? \"\" : content}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport Form from './Form'\nimport Result from './Result'\nimport './App.css';\n\n// Key to openweathermap API\nconst APIkey = \"ebaed3229a61b57e427ed497fba8baf1\"\n\n\nclass App extends Component {\n\n  state = {\n    value: \"\",\n    date: \"\",\n    city: \"\",\n    countery: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    err: false,\n  }\n\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (this.state.value.length === 0) return\n\n    if (prevState.value !== this.state.value) {\n\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIkey}&units=metric`\n\n      fetch(API)\n        .then(response => {\n          if (response.ok) {\n            return response\n          }\n          throw Error(`${this.state.value} nie istnieje`)\n        })\n        .then(response => response.json())\n        .then(data => {\n\n          const time = new Date().toLocaleString()\n          this.setState({\n            err: false,\n            date: time,\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            temp: data.main.temp,\n            pressure: data.main.pressure,\n            wind: data.wind.speed,\n            city: this.state.value.toUpperCase(),\n            country: data.sys.country,\n          })\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            err: true,\n          })\n        }\n        )\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"background\">\n        <div className=\"wrapper\">\n          <Form\n            value={this.state.value}\n            handleInputChange={this.handleInputChange} />\n          <Result weather={this.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}